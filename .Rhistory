Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
library(png)
install.packages("png")
library(png)
library(grid)
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
devtools::document()
database <- mtcars
cor(database)
var_x1 <- 1
var_x2 <- 3
cor.test(x = database[,var_x1], y = database[,var_x2])
cor.test(x = database[,var_x1], y = database[,var_x2], method = "Spearman")
cor.test(x = database[,var_x1], y = database[,var_x2], method = "spearman")
cor.test(x = database[,var_x1], y = database[,var_x2],
method = "spearman",
exact = NULL)
cor.test(x = database[,var_x1], y = database[,var_x2],
method = "spearman",
exact = FALSE)
# Base de datos
database <- mtcars
# Combinaciones posibles
vector_variables_x <- colnames(database)[-1]
vector_variables_x <- colnames(database)[-1]
pares_posibles <- combn(vector_variables_x, 2)
pares_posibles
pares_posibles <- combn(vector_variables_x, 2, simplify = T)
pares_posibles
pares_posibles <- combn(vector_variables_x, 2, simplify = F)
pares_posibles
# Valores definidos por el usuarios
valor_alfa <- 0.05
valor_confianza <- 1 - valor_alfa
# Base de datos
database <- mtcars
# Valores definidos por el usuarios
valor_alfa <- 0.05
valor_confianza <- 1 - valor_alfa
# Base de datos
database <- mtcars
# Combinaciones posibles
vector_variables_x <- colnames(database)[-1]
#
pares_posibles_diferentes <- combn(vector_variables_x, 2, simplify = F)
pares_posibles_diferentes
# Calcular la correlación para cada par de columnas
list_correlacion <- apply(pares_posibles_diferentes, 2, function(index) {
cor(database[, index[1]], database[, index[2]], method = "spearman",
exact = FALSE)
})
# Calcular la correlación para cada par de columnas
list_correlacion <- lapply(pares_posibles_diferentes, 2, function(index) {
cor(database[, index[1]], database[, index[2]], method = "spearman",
exact = FALSE)
})
# Calcular la correlación para cada par de columnas
list_correlacion <- lapply(pares_posibles_diferentes, function(index) {
cor(database[, index[1]], database[, index[2]], method = "spearman",
exact = FALSE)
})
cor.test(x = database[,var_x1], y = database[,var_x2],
method = "spearman",
exact = FALSE)
# Calcular la correlación para cada par de columnas
list_correlacion <- lapply(pares_posibles_diferentes, function(index) {
cor.test(database[, index[1]], database[, index[2]], method = "spearman",
exact = FALSE)
})
list_correlacion
# Librerias
library("Hmisc")
# Valores definidos por el usuarios
valor_alfa <- 0.05
valor_confianza <- 1 - valor_alfa
# Base de datos
database <- mtcars
# Combinaciones posibles
vector_variables_x <- colnames(database)[-1]
#
pares_posibles_diferentes <- combn(vector_variables_x, 2, simplify = F)
pares_posibles_diferentes
# Calcular la correlación para cada par de columnas
list_correlacion <- lapply(pares_posibles_diferentes, function(index) {
mis_variables  <- index
mi_correlacion <- cor.test(database[, mis_variables[1]], database[, mis_variables[2]],
method = "spearman", exact = FALSE)
output_list <- Hmisc::llist(mis_variables, mi_correlacion)
})
list_correlacion
11*10
(11*10)/2
list_correlacion01 <- lapply(pares_posibles_diferentes, function(index) {
mis_variables  <- index
mi_correlacion <- cor.test(database[, mis_variables[1]], database[, mis_variables[2]],
method = "spearman", exact = FALSE)
output_list <- Hmisc::llist(mis_variables, mi_correlacion)
})
lapply(1:length(list_correlacion01), function(x){
selected_list <- list_correlacion01[[x]]
data.frame(
"orden" = x,
"x1" = selected_list$mis_variables[1],
"x2" = selected_list$mis_variables[2]
)
})
x <- 1
selected_list <- list_correlacion01[[x]]
lapply(1:length(list_correlacion01), function(x){
#x <- 1
selected_list <- list_correlacion01[[x]]
data.frame(
"orden" = x,
"x1" = selected_list$mis_variables[1],
"x2" = selected_list$mis_variables[2],
"cor_spearman" = selected_list$mi_correlacion$parameter,
"p_valor" = selected_list$mi_correlacion$p.value
)
})
lapply(1:length(list_correlacion01), function(x){
#x <- 1
selected_list <- list_correlacion01[[x]]
data.frame(
"orden" = x,
"x1" = selected_list$mis_variables[1],
"x2" = selected_list$mis_variables[2],
"cor_spearman" = selected_list$mi_correlacion$parameter,
"p_valor" = selected_list$mi_correlacion$p.value
)
})
#x <- 1
selected_list <- list_correlacion01[[x]]
data.frame(
"orden" = x,
"x1" = selected_list$mis_variables[1],
"x2" = selected_list$mis_variables[2],
"cor_spearman" = selected_list$mi_correlacion$parameter,
"p_valor" = selected_list$mi_correlacion$p.value
)
selected_list$mi_correlacion$parameter
lapply(1:length(list_correlacion01), function(x){
#x <- 1
selected_list <- list_correlacion01[[x]]
data.frame(
"orden" = x,
"x1" = selected_list$mis_variables[1],
"x2" = selected_list$mis_variables[2],
"cor_spearman" = selected_list$mi_correlacion$estimate,
"p_valor" = selected_list$mi_correlacion$p.value
)
})
# Calcular la correlación para cada par de columnas
list_correlacion01 <- lapply(pares_posibles_diferentes, function(index) {
mis_variables  <- index
mi_correlacion <- cor.test(database[, mis_variables[1]], database[, mis_variables[2]],
method = "spearman", exact = FALSE)
output_list <- Hmisc::llist(mis_variables, mi_correlacion)
})
list_correlacion02 <- lapply(1:length(list_correlacion01), function(x){
#x <- 1
selected_list <- list_correlacion01[[x]]
data.frame(
"orden" = x,
"x1" = selected_list$mis_variables[1],
"x2" = selected_list$mis_variables[2],
"cor_spearman" = selected_list$mi_correlacion$estimate,
"p_valor" = selected_list$mi_correlacion$p.value
)
})
df_correlacion <- do.call(rbind.data.frame, list_correlacion02)
df_correlacion
# Calcular la correlación para cada par de columnas
list_correlacion01 <- lapply(pares_posibles_diferentes, function(index) {
mis_variables  <- index
mi_correlacion <- cor.test(database[, mis_variables[1]], database[, mis_variables[2]],
method = "spearman", exact = FALSE)
output_list <- Hmisc::llist(mis_variables, mi_correlacion)
})
pares_posibles_diferentes
# Calcular la correlación para cada par de columnas
list_correlacion01 <- lapply(pares_posibles_diferentes, function(index) {
mis_variables  <- index
mi_correlacion <- cor.test(x = database[, mis_variables[1]],
y = database[, mis_variables[2]],
method = "spearman", exact = FALSE)
output_list <- Hmisc::llist(mis_variables, mi_correlacion)
})
list_correlacion01
list_correlacion02 <- lapply(1:length(list_correlacion01), function(x){
#x <- 1
selected_list <- list_correlacion01[[x]]
data.frame(
"orden" = x,
"x1" = selected_list$mis_variables[1],
"x2" = selected_list$mis_variables[2],
"cor_spearman" = selected_list$mi_correlacion$estimate,
"p_valor" = selected_list$mi_correlacion$p.value
)
})
list_correlacion02
df_correlacion <- do.call(rbind.data.frame, list_correlacion02)
df_correlacion
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
devtools::document()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
library("kableExtra")
install.packages(""kableExtra"")
install.packages("kableExtra")
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
Rscience.MLG:::app_001_mlg()
# Construir y revisar el paquete
devtools::load_all()
Rscience.MLG:::app_001_mlg()
